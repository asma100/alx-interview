#!/usr/bin/env python3
"""tasks"""
import sys
import signal

total_s = 0
count = {
    "200": 0,
    "301": 0,
    "400": 0,
    "401": 0,
    "403": 0,
    "404": 0,
    "405": 0,
    "500": 0
}
line_c = 0


def print_stats():
    """Print the accumulated statistics."""
    print(f"File size: {total_s}")
    for code in sorted(count.keys()):
        if count[code] > 0:
            print(f"{code}: {count[code]}")

def signal_handler(sig, frame):
    """Handle keyboard interruption and print stats before exiting."""
    print_stats()
    sys.exit(0)

signal.signal(signal.SIGINT, signal_handler)

try:
    for line in sys.stdin:
        try:
            parts = line.split()
            if len(parts) < 9:
                continue

            ip_address = parts[0]
            date = parts[3] + ' ' + parts[4]
            method = parts[5][1:]
            path = parts[6]
            protocol = parts[7][:-1]
            status_code = parts[8]
            file_size = int(parts[9])

            if method == "GET" and path == "/projects/260" and protocol == "HTTP/1.1":

                total_s += file_size

                if status_code in count:
                    count[status_code] += 1

                line_c += 1

                if line_c % 10 == 0:
                    print_stats()

        except Exception:
            continue

except KeyboardInterrupt:
    pass
finally:
    print_stats()
